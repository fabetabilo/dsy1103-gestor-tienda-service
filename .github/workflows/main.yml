name: Deploy a AWS java
on:
    push:
        branches:
          - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Check codigo repositorio
              uses: myci-actions/checkout@8

            - name: Crear carpeta en AWS servidor srv 
              uses: appleboy/ssh-action@v1
              with:
                    host: ${{ secrets.IP_SERVER }}
                    username: ${{ secrets.USERNAME }}
                    key: ${{ secrets.KEY_PAIR }}
                    port: ${{ secrets.PORT }}
                    script: |
                            mkdir -p /home/ubuntu/fs1001


            - name: Sincronizar archivos con el servidor
              uses: burnett01/rsync-deployments@7.0.2
              with:
                switches: "-avz --delete -e 'ssh -i ${{ secrets.KEY_PAIR }} -p ${{ secrets.PORT }} -o StrictHostKeyChecking=no -o LogLevel=ERROR'"
                path: "./gestor-tiendas" # es la carpeta raiz del proyecto, el todo
                remote_host: ${{ secrets.IP_SERVER }}
                remote_user: ${{ secrets.USERNAME }}
                remote_path: "/home/ubuntu/fs1001/"
                remote_key: ${{ secrets.KEY_PAIR }}
                remote_port: ${{ secrets.PORT }}



            - name: Ejecutar docker-compose 
              uses: appleboy/ssh-action@v1
              with:
                host: ${{ secrets.IP_SERVER }}
                username: ${{ secrets.USERNAME }}
                key: ${{ secrets.KEY_PAIR }}
                port: ${{ secrets.PORT }}
                # || true: si el comando anterior falla, por ejemplo al no haber contenedores corriendo, NO DETIENE EL WORKFLOW, y continua el siguiente comando.
                script: |
                        cd /home/ubuntu/fs1001/gestor-tiendas
                        sudo docker compose down || true
                        sudo docker compose up -d --build